---
- name: Ensure apt cache is up to date
  apt:
      update_cache: yes

- name: Install prerequisite packages
  apt:
    name: "{{ item }}"
  with_items:
    - "git"
    - "curl"
    - "build-essential"
    - "openssl"
    - "libssl-dev"
    - "zlib1g-dev"
    - "libbz2-dev"
    - "libreadline-dev"
    - "libsqlite3-dev"

- name: Create user if missing
  user:
    name: "{{ pyenv_owner }}"
    shell: /bin/bash

- name: Install PyEnv
  sudo_user: "{{ pyenv_owner }}"
  git:
    repo: https://github.com/yyuu/pyenv.git
    dest: "{{ pyenv_path }}"

- name: Install PyEnv-virtualenv plugin
  sudo_user: "{{ pyenv_owner }}"
  git:
    repo: https://github.com/yyuu/pyenv-virtualenv.git
    dest: "{{ pyenv_path }}/plugins/pyenv-virtualenv"

- name: Install PyEnv-virtualenvwrapper plugin
  sudo_user: "{{ pyenv_owner }}"
  git:
    repo: https://github.com/yyuu/pyenv-virtualenvwrapper.git
    dest: "{{ pyenv_path }}/plugins/pyenv-virtualenvwrapper"

- name: Install .pyenvrc
  sudo_user: "{{ pyenv_owner }}"
  template:
    src: ".pyenvrc.j2"
    dest: "{{ pyenv_path }}/.pyenvrc"
    owner: "{{ pyenv_owner }}"
    group: "{{ pyenv_owner }}"
    mode: "0644"

- name: Modify .bashrc
  sudo_user: "{{ pyenv_owner }}"
  lineinfile: dest="/home/{{ pyenv_owner }}/.bashrc"
              regexp="\.pyenvrc$"
              line="source {{ pyenv_path }}/.pyenvrc"
              state=present

- name: Install Python interpreters {{ pyenv_python_versions }}
  sudo_user: "{{ pyenv_owner }}"
  shell: . {{ pyenv_path }}/.pyenvrc && pyenv install {{ item }}
         creates="{{ pyenv_path }}/versions/{{ item }}/bin/python"
  with_items: pyenv_python_versions

- name: Create virtual environments
  sudo_user: "{{ pyenv_owner }}"
  shell: . {{ pyenv_path }}/.pyenvrc && pyenv virtualenv {{ item.py_version }} {{ item.venv_name }}
         creates="{{ pyenv_path }}/versions/{{ item.venv_name }}/bin/python"
  with_items: pyenv_virtualenvs
